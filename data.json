[
    [
        {
            "id": "1",
            "label": "Q_Open",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "6ba9e372-2f50-443a-950a-7c772a5f3c18",
                        "value": "Explain in a few words the problem to be solved by the AI you want."
                    }
                ],
                "help text": [
                    {
                        "id": "8544d98d-8169-463c-a11c-a88a86a319ad",
                        "value": "Having a clear idea of what the AI should do is the first step before you start making technical choices."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "1|partitionKey",
                        "value": "Questions"
                    }
                ],
                "list_AI": [
                    {
                        "id": "28f06669-f8d1-4b7d-994a-0a2922ddf74f",
                        "value": "LinearRegression,Lars,LinearRegression,Lasso,Ridge,ElasticNet,Support Vector Machine (SVR) with linear kernel (for regression),Support Vector Machine (SVR) with rbf kernel (for regression),Multilayer perceptron (MLP) regressor,K-Nearest Neighbors regressor,Gradient Boosting Machine (LightGBM) with absolute error loss for regression,Gradient Boosting Machine (LightGBM) with poisson loss for regression,AdaBoost regressor,Random Forest regressor,LinearSVC,Support Vector Machine (SVC) with rbf kernel,Decision Tree,K-Nearest Neighbors classifier,Multilayer perceptron (MLP) classifier,Gradient Boosting Machine (LightGBM) with absolute error loss for classification,Gradient Boosting Machine (LightGBM) with poisson loss for classification,AdaBoost classifier,Random Forest classifier"
                    }
                ]
            }
        },
        {
            "id": "3",
            "label": "Q_QCM",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "a5ac3f04-1f63-4159-8010-4330c81c476d",
                        "value": "What is the format of the data you are going to give to your AI?"
                    }
                ],
                "help text": [
                    {
                        "id": "294e5528-e88e-44c4-b198-33b1e2af2b2f",
                        "value": "The choice of an AI is made above all according to the type of data that will be provided to it. Each model has its specificity, image or text analysis is done in a very different way."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "3|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "4.1",
            "label": "Q_QCM",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "ac7c6098-efbf-4798-a53a-7bbdeda1a914",
                        "value": "What do you want to get from this data?"
                    }
                ],
                "help text": [
                    {
                        "id": "c015fc72-2691-4041-99af-800167d81a30",
                        "value": "From raw data we can retrieve a lot of information and make all kinds of predictions. One can try to predict a value or even classify data into some category."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "4.1|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "4.2",
            "label": "Q_QCM",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "76258ea0-920d-4dae-970e-d8b16d782725",
                        "value": "What do you want to get from text?"
                    }
                ],
                "help text": [
                    {
                        "id": "863ce134-aced-4722-be51-e9ccd34743cf",
                        "value": "There are many ways to analyze text, each providing different information. You can detect important elements, seek to analyze the feeling that emerges from a text, translate the text into another language and many other things."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "4.2|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "4.3",
            "label": "Q_QCM",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "3fcb52be-6356-4ad9-b701-25d4044089b8",
                        "value": "What do you want to get from these image?"
                    }
                ],
                "help text": [
                    {
                        "id": "0507a8a0-2793-4ea2-9eea-8316bbc451e2",
                        "value": "When working with images, you have many possibilities. This ranges from object detection to image recognition and passing through the analysis of facial expressions."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "4.3|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "5",
            "label": "Q_QCM",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "e58155c5-5c51-4e08-a736-77ceecb8a3c8",
                        "value": "Choose between speed of execution and accuracy ."
                    }
                ],
                "help text": [
                    {
                        "id": "6a76179f-4f53-4469-ab37-34fda337c464",
                        "value": "The more accurate an AI is, the longer it will need to get its answer. \"The longer the AI thinks, the better its response will be.\" Depending on the case, it is sometimes better to obtain a result quickly (if for example one seeks to obtain many predictions in a short time), even to the detriment of the precision of the solution, whereas in others it is preferable to have the most precise answer possible even if it must take time to calculate."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "5|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "6",
            "label": "Q_QCM",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "76d14ce2-31b3-4591-be30-9284a1a85066",
                        "value": "Do you want the data on which the AI is based to be able to be updated after the deployment of the model?"
                    }
                ],
                "help text": [
                    {
                        "id": "d4133f03-9005-4ad0-a2c3-9909f02f053a",
                        "value": "Being able to update an AI after it goes live can be a good idea to improve its performance, but it will require maintenance and finding new training data."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "6|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "6.1",
            "label": "Q_QRM",
            "type": "vertex",
            "properties": {
                "help text": [
                    {
                        "id": "3e0a5e0b-2d17-4f69-9761-54307472fdbc",
                        "value": "There are 2 main methods to update an AI model. The first consists in providing it with new data in the form of a dataset provided by data analysts. And the second is to allow AI to use data provided by users to update itself. Each method has its advantages and disadvantages, the first allows to be sure that the data provided to the model is correct, but it requires more work, while the second allows to automate all that, but the AI risks to be biased by users (if many users say the same thing, the AI will consider it to be true, even if it is factually false)."
                    }
                ],
                "text": [
                    {
                        "id": "ce40b457-b660-49cb-ac14-6ec876b5badd",
                        "value": "What data do you want to update your AI with?"
                    }
                ],
                "partitionKey": [
                    {
                        "id": "6.1|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "6.2",
            "label": "Q_QCM",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "d8158aff-e7a4-4285-97cc-dc03e0210f58",
                        "value": "How often do you want to update your AI?"
                    }
                ],
                "help text": [
                    {
                        "id": "f13e7e26-768e-4006-bb5c-f26bf7e0e68c",
                        "value": "When an AI is updated, it must be in maintenance mode, the time to make the changes. Thus, the more frequent the updates, the more often the AI will be inaccessible, but the more efficient it will be because it is up to date with new data that improves its performance."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "6.2|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "7",
            "label": "Q_QRM",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "c2b386ad-516c-4155-86c0-0f0548d02781",
                        "value": "Who will be the user using your AI? (You can select more than one option)"
                    }
                ],
                "help text": [
                    {
                        "id": "03eb4495-b6a0-43f6-9911-dbab28f3cc41",
                        "value": "The use of AI can be personalized according to its user, the interface will not be the same if a child or a specialist must use it. For the child, for example, the interface will be much simpler and contain only a few buttons, while a specialist might need all the options we can provide."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "7|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "8",
            "label": "Q_QRM",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "b5627d79-10ff-4f60-b890-dad5fed23141",
                        "value": "How do you want to see the results provided by the AI?"
                    }
                ],
                "help text": [
                    {
                        "id": "d5bfa1b4-f11c-499a-a257-96e9d6a73707",
                        "value": "Visual representation of the results of an AI is a very important choice, an effective data representation will allow you to see at a glance the patterns that stand out where a simple string of numbers is not likely to tell you much."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "8|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "9",
            "label": "end",
            "type": "vertex",
            "properties": {
                "partitionKey": [
                    {
                        "id": "9|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "4.1.1",
            "label": "Q_QCM",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "ed5926c6-6716-4fc0-8de0-4126b2e90307",
                        "value": "What is your desired goal regarding your AI errors?"
                    }
                ],
                "help text": [
                    {
                        "id": "d1d0ec45-15e7-4b61-8510-5adac5cdcd9c",
                        "value": "Depending on the context of your project, you may want to reduce some of the errors that the AI may make."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "4.1.1|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "4.1.2",
            "label": "Q_QCM",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "31e77af5-7ed6-4e39-99ca-68d727d68df6",
                        "value": "Are there any classification categories in which you want your AI to be more accurate? "
                    }
                ],
                "help text": [
                    {
                        "id": "d0cc44ac-b1e4-47ee-97e2-461a073f384a",
                        "value": "Depending on the context of the project, it is sometimes preferable that the AI does not make mistakes, especially in one or more specific categories. Example: In the categorization of emails, it is better that the AI makes a mistake and categorizes \"non-fraudulent\" emails as \"fraudulent\" than the opposite."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "4.1.2|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "4.1.2.1",
            "label": "Q_Open",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "6b6fa4c9-1405-45b1-a367-7050ab6e43ec",
                        "value": "Name the more sensitive categories."
                    }
                ],
                "help text": [
                    {
                        "id": "4d0bfb49-9d87-4cf2-8d3c-288a95f18a05",
                        "value": "Prefer to put a small number of sensitive categories to optimize your AI on them."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "4.1.2.1|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "4.1.3",
            "label": "Q_QCM",
            "type": "vertex",
            "properties": {
                "text": [
                    {
                        "id": "749f9b1c-f815-4f8e-ae07-1fe882da3ded",
                        "value": "What is your desired goal regarding your AI errors?"
                    }
                ],
                "help text": [
                    {
                        "id": "22924e8b-5592-46e2-b8ca-b1395a717755",
                        "value": "Depending on the context of your project, you may want to reduce some of the errors that the AI may make."
                    }
                ],
                "partitionKey": [
                    {
                        "id": "4.1.3|partitionKey",
                        "value": "Questions"
                    }
                ]
            }
        },
        {
            "id": "2",
            "label": "Q_QCM_Bool",
            "type": "vertex",
            "properties": {
                "partitionKey": [
                    {
                        "id": "2|partitionKey",
                        "value": "Questions"
                    }
                ],
                "text": [
                    {
                        "id": "9e53ff45-f84f-45f5-a5d6-110f36bbd852",
                        "value": "Your AI must be able to work on encrypted data?"
                    }
                ],
                "help text": [
                    {
                        "id": "f961426b-ceb8-4a8a-a1b5-65eb38791d5e",
                        "value": "Some AIs can operate on encrypted data. But this strongly limits the possible choice of model and considerably increases the calculation time, so only check this option if you are working with sensitive data."
                    }
                ]
            }
        }
    ],
    [
        {
            "id": "3-4.1-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "4.1",
            "outV": "3",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "help text": "Everything related to large digital data groups.",
                "text": "DataSet, CSV or Data Base"
            }
        },
        {
            "id": "3-4.2-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "4.2",
            "outV": "3",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0",
                "help text": "Anything related to text-based artificial intelligence (NLP). Does not concern text images.",
                "text": "Text"
            }
        },
        {
            "id": "3-4.3-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "4.3",
            "outV": "3",
            "properties": {
                "modif_crypted": "true",
                "list_coef": "0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0",
                "help text": "Everything that concerns artificial intelligence on images, also called computer vision.",
                "text": "Pictures"
            }
        },
        {
            "id": "4.2-5-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "5",
            "outV": "4.2",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "Text classification allows many things such as: categorizing articles, sentiment analysis, spam detection and much more.",
                "text": "Classify texts"
            }
        },
        {
            "id": "4.2-5-2",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "5",
            "outV": "4.2",
            "properties": {
                "modif_crypted": "true",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "Within the extraction of elements in a text, we can cite the recognition of entities, the extraction of key points of a text to make summaries, and many others.",
                "text": "Extraction of elements"
            }
        },
        {
            "id": "4.2-5-3",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "5",
            "outV": "4.2",
            "properties": {
                "modif_crypted": "true",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "Translate texts automatically from one language to another.",
                "text": "Translation"
            }
        },
        {
            "id": "4.3-5-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "5",
            "outV": "4.3",
            "properties": {
                "modif_crypted": "true",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "This includes everything related to object detection in an image (such as the detection of all faces in a photo, car, text character, etc.)",
                "text": "Object detection"
            }
        },
        {
            "id": "4.3-4.1.3-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "4.1.3",
            "outV": "4.3",
            "properties": {
                "modif_crypted": "true",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "text": "Classify between two choices",
                "help text": "Allows to classify images between 2 distinct choices. Example: Classify diseased or non-diseased plants according to their images."
            }
        },
        {
            "id": "4.3-4.1.2-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "4.1.2",
            "outV": "4.3",
            "properties": {
                "modif_crypted": "true",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "text": "Classify between more than two choices",
                "help text": "All classification methods that include the ability to classify images into multiple categories (such as classifying birds by species)"
            }
        },
        {
            "id": "6-6.1-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QRM",
            "outVLabel": "Q_QCM",
            "inV": "6.1",
            "outV": "6",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "text": "Yes"
            }
        },
        {
            "id": "6-7-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QRM",
            "outVLabel": "Q_QCM",
            "inV": "7",
            "outV": "6",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "text": "No"
            }
        },
        {
            "id": "6.1-6.2-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QRM",
            "inV": "6.2",
            "outV": "6.1",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "help text": "Allows AI to rely on user input/feedback. This makes it easy to have a lot of data, but at the risk of having an AI biased by users.",
                "text": "Update based on user feedback"
            }
        },
        {
            "id": "6.1-6.2-2",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QRM",
            "inV": "6.2",
            "outV": "6.1",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "help text": "Updating with a data set prepared by data analysts. It requires more work, but guarantees AI stability.",
                "text": "Update with new and more current data"
            }
        },
        {
            "id": "6.2-7-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QRM",
            "outVLabel": "Q_QCM",
            "inV": "7",
            "outV": "6.2",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "help text": "Schedule your updates whenever you want, without necessarily choosing a regular interval.",
                "text": "Manually"
            }
        },
        {
            "id": "6.2-7-2",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QRM",
            "outVLabel": "Q_QCM",
            "inV": "7",
            "outV": "6.2",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "text": "Daily"
            }
        },
        {
            "id": "6.2-7-3",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QRM",
            "outVLabel": "Q_QCM",
            "inV": "7",
            "outV": "6.2",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "text": "Weekly"
            }
        },
        {
            "id": "7-8-4",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QRM",
            "outVLabel": "Q_QRM",
            "inV": "8",
            "outV": "7",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "help text": "For an internal user, the interface must be complete and allow him to act directly on the AI to configure and update it.",
                "text": "Internal User"
            }
        },
        {
            "id": "7-8-3",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QRM",
            "outVLabel": "Q_QRM",
            "inV": "8",
            "outV": "7",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "help text": "For an external user, the interface must be intuitive and he must be able to easily obtain the result he is looking for.",
                "text": "External User"
            }
        },
        {
            "id": "7-8-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QRM",
            "outVLabel": "Q_QRM",
            "inV": "8",
            "outV": "7",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "help text": "For a child, the simplicity and formatting of the interface is essential for them to understand how to use AI.",
                "text": "Child"
            }
        },
        {
            "id": "7-8-2",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QRM",
            "outVLabel": "Q_QRM",
            "inV": "8",
            "outV": "7",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "help text": "A computer expert may need more options to get the most out of AI.",
                "text": "Computer professional"
            }
        },
        {
            "id": "8-9-2",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "end",
            "outVLabel": "Q_QRM",
            "inV": "9",
            "outV": "8",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "help text": "A diagram can be useful to show the proportions of data with equal results and show an overall trend at a glance.",
                "text": "Diagram"
            }
        },
        {
            "id": "8-9-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "end",
            "outVLabel": "Q_QRM",
            "inV": "9",
            "outV": "8",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "help text": "We can display the results in table form to see exactly which data gives which result.",
                "text": "Tables"
            }
        },
        {
            "id": "4.1-4.1.1-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "4.1.1",
            "outV": "4.1",
            "properties": {
                "modif_crypted": "false",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0",
                "help text": "If the objective is to predict a number. Example: predict the selling price of a house according to certain criteria (number of rooms, ...)",
                "text": "Predict a numerical value"
            }
        },
        {
            "id": "4.1-4.1.2-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "4.1.2",
            "outV": "4.1",
            "properties": {
                "help text": "If the objective is to classify data between several possibilities. Example: Give a number of stars to a hotel according to criteria (geographical position, cleanliness, ...).",
                "list_coef": "0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "modif_crypted": "false",
                "text": "Classify between more than two choices"
            }
        },
        {
            "id": "4.1-4.1.3-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "4.1.3",
            "outV": "4.1",
            "properties": {
                "text": "Classify between two choices",
                "list_coef": "0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "help text": "If the objective is to classify the data between 2 possibilities. Example: To diagnose if a patient has a disease or not according to data.",
                "modif_crypted": "false"
            }
        },
        {
            "id": "4.1.1-5-2",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "5",
            "outV": "4.1.1",
            "properties": {
                "text": "Minimize the average error. ",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "Errors are generally smaller, but when they do occur they are very far from the expected answer.",
                "modif_crypted": "false"
            }
        },
        {
            "id": "4.1.1-5-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "5",
            "outV": "4.1.1",
            "properties": {
                "text": "Minimize the maximum error that can be made.",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "Errors are more frequent but rarely far from the expected answer.",
                "modif_crypted": "false"
            }
        },
        {
            "id": "4.1.1-5-3",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "5",
            "outV": "4.1.1",
            "properties": {
                "text": "Balanced",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "Balanced according to the maximum error and according to the average error.",
                "modif_crypted": "false"
            }
        },
        {
            "id": "4.1.2-4.1.2.1-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_Open",
            "outVLabel": "Q_QCM",
            "inV": "4.1.2.1",
            "outV": "4.1.2",
            "properties": {
                "text": "Yes",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "modif_crypted": "false"
            }
        },
        {
            "id": "4.1.2-5-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "5",
            "outV": "4.1.2",
            "properties": {
                "text": "No",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "modif_crypted": "false"
            }
        },
        {
            "id": "4.1.2.1-5-1",
            "label": "Q_Next",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_Open",
            "inV": "5",
            "outV": "4.1.2.1"
        },
        {
            "id": "4.1.3-5-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "5",
            "outV": "4.1.3",
            "properties": {
                "text": "That a true thing is considered false.",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "Example: That in a cancer detection, one detects a person having cancer when he has it.",
                "modif_crypted": "false"
            }
        },
        {
            "id": "4.1.3-5-2",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "5",
            "outV": "4.1.3",
            "properties": {
                "text": "That a false thing is considered true.",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "Example: That in a detection of cancer, we detect that a person has cancer when it does not have it.",
                "modif_crypted": "false"
            }
        },
        {
            "id": "4.1.3-5-3",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "5",
            "outV": "4.1.3",
            "properties": {
                "text": "Balanced.",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "A balance between the two other propositions.",
                "modif_crypted": "false"
            }
        },
        {
            "id": "1-2-1",
            "label": "Q_Next",
            "type": "edge",
            "inVLabel": "Q_QCM_Bool",
            "outVLabel": "Q_Open",
            "inV": "2",
            "outV": "1"
        },
        {
            "id": "2-3-2",
            "label": "Q_Next",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM_Bool",
            "inV": "3",
            "outV": "2",
            "properties": {
                "text": "Yes",
                "list_coef": "nan, 1.0, nan, nan, nan, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, nan, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, nan, 0.0",
                "modif_crypted": "false"
            }
        },
        {
            "id": "2-3-1",
            "label": "Q_Next",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM_Bool",
            "inV": "3",
            "outV": "2",
            "properties": {
                "text": "No",
                "list_coef": "1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0",
                "modif_crypted": "false"
            }
        },
        {
            "id": "5-6-1",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "6",
            "outV": "5",
            "properties": {
                "text": "Higher speed",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "Higher speed usually means lower accuracy.",
                "modif_crypted": "false"
            }
        },
        {
            "id": "5-6-2",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "6",
            "outV": "5",
            "properties": {
                "text": "Balance between speed and precision",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "A balance between speed and accuracy.",
                "modif_crypted": "false"
            }
        },
        {
            "id": "5-6-3",
            "label": "Proposition",
            "type": "edge",
            "inVLabel": "Q_QCM",
            "outVLabel": "Q_QCM",
            "inV": "6",
            "outV": "5",
            "properties": {
                "text": "Higher accuracy",
                "list_coef": "nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan",
                "help text": "Higher accuracy usually means lower speed.",
                "modif_crypted": "false"
            }
        }
    ]
]